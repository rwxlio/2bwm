; variables
(defpoll SONG :interval "1000s" `echo "$(mpc current -f %title%)"`)
(defpoll ARTIST :interval "1000s" `echo "$(mpc current -f %artist%)"`) ;       
(defpoll STATUS :interval "1000s" `[ "$(mpc status %state%)" = "playing" ] && echo "󰏥 " || echo "󰐌 "`) ;󰏥 󰏤 󰐌     
(defpoll CURRENT :interval "2s" `mpc status | grep "%)" | awk '{print $4}' | tr -d '(%)'`)
(defvar COVER "imgs/art.png")
;(defpoll CTIME :interval "1s" `mpc status | grep "#" | awk '{print $3}' | sed 's|/.*||g'`)
;(defpoll TTIME :interval "1s" `mpc -f %time% current`)

; widgets
(defwidget music_art []
  	(box :class "genwin" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false" 
        (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
        (box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
			     ; (label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
			     ; (label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
			      (box :orientation "h" :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" 
				        (button :class "btn_prev" :onclick "mpc prev" "󰒮") ; 玲 ; the widget will be updated by mpd_notify
				        (button :class "btn_play" :onclick 'mpc toggle' STATUS)
				        (button :class "btn_next" :onclick "mpc next" "󰒭")) ; 怜
			      (box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" 
				        (scale  :min 0 :active "true" :max 100 :value CURRENT))
        )
    )
)

(defwidget music_info []
  	(box :class "genwin" :orientation "h" 
        (box :orientation "v" :space-evenly "false"
			      (box :orientation "h" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false" 
				        (button :class "song_icon" :onclick "" "󰎈")
			          (label :halign "start" :valign "left" :class "song" :text SONG))
			      (box :orientation "h" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false" 
				        (button :class "artist_icon" :onclick "" " ")
			          (label :halign "start" :class "artist" :wrap "true" :text ARTIST))
            )
    )
)

; windows
; windowtypes: dock, toolbar, dialog, normal, utility, desktop, notification
; music_art music_info width height TRUE
(defwindow music_art :monitor 0 :stacking "bg" :windowtype "utility" :wm-ignore false :focusable false
                     :geometry (geometry :x "-226" :y "-41" :width "306" :height "412" :anchor "center center")
    (music_art))

(defwindow music_info :monitor 0 :stacking "bg" :windowtype "utility" :wm-ignore false :focusable false
                      :geometry (geometry :x "159" :y "108" :width "440px" :height "114" :anchor "center center")
    (music_info))
